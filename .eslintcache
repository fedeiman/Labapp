[{"/home/federico/Desktop/Labapp/src/index.js":"1","/home/federico/Desktop/Labapp/src/reportWebVitals.js":"2","/home/federico/Desktop/Labapp/src/App.js":"3","/home/federico/Desktop/Labapp/src/Components/Login/login.js":"4","/home/federico/Desktop/Labapp/src/Components/Login/register.js":"5","/home/federico/Desktop/Labapp/src/Components/Forms/mainLayout.js":"6"},{"size":459,"mtime":1610760760923,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1610572544022,"results":"9","hashOfConfig":"8"},{"size":133,"mtime":1610767007869,"results":"10","hashOfConfig":"8"},{"size":6842,"mtime":1611196983458,"results":"11","hashOfConfig":"8"},{"size":6992,"mtime":1610766593121,"results":"12","hashOfConfig":"8"},{"size":3689,"mtime":1611197828571,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1aekn5d",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/federico/Desktop/Labapp/src/index.js",[],["28","29"],"/home/federico/Desktop/Labapp/src/reportWebVitals.js",[],"/home/federico/Desktop/Labapp/src/App.js",[],"/home/federico/Desktop/Labapp/src/Components/Login/login.js",["30"],"/home/federico/Desktop/Labapp/src/Components/Login/register.js",["31"],"import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Container from '@material-ui/core/Container';\n\nconst PouchDB = require('pouchdb-browser');\nconst pouchDB = PouchDB.default.defaults();\nconst db = new pouchDB('Users');\nvar passwordHash = require('password-hash');\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function Register (props) {\n    const [showpass,setPass] = useState(false)\n    const [unComplete,setUnCom] = useState(false)\n    const [name,setName] = useState('')\n    const [error,setError] = useState(false)\n    const [surName,setSurName] = useState('')\n    const [email,setEmail] = useState('')\n    const [password,setPassword] = useState('')\n    const [rol, setrol] = useState('');\n    const classes = useStyles();\n    \n    const handleChange = (event) => {\n        setrol(event.target.value);\n      };\n\n    const saveUser = () => {\n            if(name !== '' && surName !== '' && email !== '' && password !== '' && rol !== ''){\n                db.put({\n                    _id:email,\n                    name:name,\n                    surName:surName,\n                    rol:rol,\n                    password: passwordHash.generate(password)\n                }).then(function (){\n                    props.showLogin(true)\n                }).catch(function (err) {\n                    setError(true)\n                  });          \n            }\n        else{\n            setUnCom(true)\n        }\n    }\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Registro\n                </Typography>\n                <form className={classes.form}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Nombre\"\n                        name=\"name\"\n                        value={name}\n                        onChange={({ target: { value }}) => {setName(value)}}\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"surName\"\n                        label=\"Apellido\"\n                        name=\"surName\"\n                        value={surName}\n                        onChange={({ target: { value }}) => {setSurName(value)}}\n                    />\n                        <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        error={error}\n                        helperText={error && \"E-mail invalido\"}\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email\"\n                        name=\"email\"\n                        value={email}\n                        onChange={({ target: { value }}) => {setEmail(value)}}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        type={showpass ? \"text\" : \"password\"}\n                        name=\"password\"\n                        label=\"ContraseÃ±a\"\n                        id=\"password\"\n                        value={password}\n                        onChange={({ target: { value }}) => {setPassword(value)}}\n                        className=\"formInput\"\n                        InputProps={{\n                            endAdornment: (\n                                <Button\n                                    onClick={()=>setPass(!showpass)}\n                                    position=\"end\"\n                                    color=\"primary\"\n                                >\n                                    { showpass ? <FaEye /> : <FaEyeSlash /> }\n                                </Button>\n                            )\n                        }}\n                    />\n                    <FormControl variant=\"outlined\" className={classes.form}>\n                        <InputLabel id=\"demo-simple-select-outlined-label\">Rol</InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-outlined-label\"\n                            id=\"demo-simple-select-outlined\"\n                            value={rol}\n                            onChange={handleChange}\n                            label=\"Rol\"\n                        >\n                            <MenuItem value={0}>Bioquimico</MenuItem>\n                            <MenuItem value={1}>Secretaria/o</MenuItem>\n                            <MenuItem value={2}>Jefe?</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <Button\n                        onClick={()=>saveUser()}\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Crear Usuario\n                    </Button>\n                    <Grid item xs>\n                        <Button\n                            onClick={()=>props.showLogin(true)}\n                            fullWidth\n                        >\n                            Volver\n                        </Button>\n                    </Grid>\n                </form>\n                <Grid>\n                {((name === '' || surName === '' || email === '' || password === '' || rol === '') && unComplete) &&\n                <Typography style={{color:'red'}}>\n                    Completa todos los datos * \n                </Typography>\n                }\n                </Grid>\n            </div>\n        </Container>\n    );\n}\n\n","/home/federico/Desktop/Labapp/src/Components/Forms/mainLayout.js",["32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":27,"nodeType":"40","messageId":"41","endLine":1,"endColumn":36},{"ruleId":"38","severity":1,"message":"39","line":1,"column":27,"nodeType":"40","messageId":"41","endLine":1,"endColumn":36},{"ruleId":"38","severity":1,"message":"39","line":1,"column":27,"nodeType":"40","messageId":"41","endLine":1,"endColumn":36},{"ruleId":"38","severity":1,"message":"42","line":77,"column":9,"nodeType":"40","messageId":"41","endLine":77,"endColumn":14},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'theme' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]